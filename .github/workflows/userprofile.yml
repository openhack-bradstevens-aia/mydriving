name: userprofile

env:
  ACR: openhackqj13fpm0acr.azurecr.io
  WORKING_DIR: apis/userprofile
  STAGING_URL: https://openhackqj13fpm0userprofile-staging.azurewebsites.net
  PROD_URL: https://openhackqj13fpm0userprofile.azurewebsites.net
  RG: openhackqj13fpm0rg
  WEBAPP_NAME: openhackqj13fpm0userprofile

on:
  push:
    branches: [ main ]
    paths:
      - apis/userprofile/**
      - .github/workflows/userprofile.yml
  pull_request:
    branches: [ main ]
    paths:
      - apis/userprofile/**

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - uses: actions/checkout@v2
      with:
        node-version: '12'
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present 
    - run: npm run test

    - name: Login to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Execute Azure CLI Commands
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          cd ${{ env.WORKING_DIR }}
          az acr build --image "mydriveway/api-userprofile:${{ github.run_number }}" --registry ${{ env.ACR }} --file Dockerfile .

    - name : Deploy App Service 
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: "${{ env.ACR }}/mydriveway/api-userprofile:${{ github.run_number }}"
        slot-name: staging

    - name: Validate Staging
      uses: jtalk/url-health-check-action@v2
      with:
        # Check the following URLs one by one sequentially
        url: ${{ env.STAGING_URL }}/api/healthcheck/user
        # Follow redirects, or just report success on 3xx status codes
        follow-redirect: false # Optional, defaults to "false"
        # Fail this action after this many failed attempts
        max-attempts: 3 # Optional, defaults to 1
        # Delay between retries
        retry-delay: 5s # Optional, only applicable to max-attempts > 1
        # Retry all errors, including 404. This option might trigger curl upgrade.
        retry-all: false # Optional, defaults to "false"

    - name: Swap staging to production
      run: |
        az webapp deployment slot swap --name ${{ env.WEBAPP_NAME }} --resource-group ${{ env.RG }} --slot staging --target-slot production
      # uses: dacbd/create-issue-action@main
      # if: failure()
      # with:
      #   token: ${{ github.token }}
      #   title: Action workflow failed.
      #   body: |
      #     ### Context
      #     [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_number }})
      #     [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
      #     Workflow name - `${{ github.workflow }}`
      #     Job -           `${{ github.job }}`
      #     status -        `${{ job.status }}`

    - name: Validate_Production
      uses: jtalk/url-health-check-action@v2
      with:
        # Check the following URLs one by one sequentially
        url: ${{ env.PROD_URL }}
        # Follow redirects, or just report success on 3xx status codes
        follow-redirect: false # Optional, defaults to "false"
        # Fail this action after this many failed attempts
        max-attempts: 3 # Optional, defaults to 1
        # Delay between retries
        retry-delay: 5s # Optional, only applicable to max-attempts > 1
        # Retry all errors, including 404. This option might trigger curl upgrade.
        retry-all: false # Optional, defaults to "false"
      
    - name: Rollback
      if: failure()
      run: |
        az webapp deployment slot swap --name ${{ env.WEBAPP_NAME }} --resource-group ${{ env.RG }} --slot staging --target-slot production

    # - name: Create Issue on Failed Workflow
    #   if: failure()
    #   uses: dacbd/create-issue-action@main
    #   with:
    #     token: ${{ github.token }}
    #     title: Action workflow failed.
    #     body: |
    #       ### Context
    #       [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_number }})
    #       [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
    #       Workflow name - `${{ github.workflow }}`
    #       Job -           `${{ github.job }}`
    #       status -        `${{ job.status }}`
